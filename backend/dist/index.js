var ue=Object.create;var P=Object.defineProperty;var ce=Object.getOwnPropertyDescriptor;var me=Object.getOwnPropertyNames;var de=Object.getPrototypeOf,le=Object.prototype.hasOwnProperty;var pe=(a,e,r)=>e in a?P(a,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):a[e]=r;var fe=(a,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of me(e))!le.call(a,s)&&s!==r&&P(a,s,{get:()=>e[s],enumerable:!(t=ce(e,s))||t.enumerable});return a};var g=(a,e,r)=>(r=a!=null?ue(de(a)):{},fe(e||!a||!a.__esModule?P(r,"default",{value:a,enumerable:!0}):r,a));var f=(a,e,r)=>pe(a,typeof e!="symbol"?e+"":e,r);var ye=require("dotenv/config");var A=class{constructor(){f(this,"PORT");f(this,"DATABASE_URL");f(this,"JWT_SECRET");f(this,"email_sender");f(this,"email_sender_pass");f(this,"Front_url");f(this,"ENVIRONMENT");this.PORT=Number(process.env.PORT)||3500,this.DATABASE_URL=process.env.DATABASE_URL||"",this.JWT_SECRET=process.env.JWT_SECRET||"udduLovesToGetDominated",this.ENVIRONMENT=process.env.ENVIRONMENT||"development"}verifyConfig(){let e=[];if(["DATABASE_URL"].forEach(t=>{process.env[t]||e.push(`Missing ${t} in environment variables`)}),e.length>0)throw new Error(e.join(`
`))}},y=new A;var q=g(require("express")),ie=g(require("cors"));var B=(a,e,r,t)=>{let s=a.status||500;switch(s){case 400:return r.status(s).json({message:"Bad Request"});case 401:return r.status(s).json({message:"Unauthorized"});case 403:return r.status(s).json({message:"Forbidden"});case 404:return r.status(s).json({message:"Not Found"})}return console.error(a),r.status(s).json({message:"Something went wrong. Please try again later."})};var C=g(require("jsonwebtoken"));var M=class{constructor(){f(this,"create_token",async(e,r,t="")=>C.default.sign({email:e,owner:r,business:t},y.JWT_SECRET,{expiresIn:"48h"}))}},N=new M;var _=g(require("bcryptjs"));var j=class{constructor(){f(this,"password_crypt",async e=>{let r=await _.default.genSalt(10);return _.default.hash(e,r)});f(this,"password_compare",async(e,r)=>await _.default.compare(e,r))}},E=new j;var F=require("@prisma/client");var i;y.ENVIRONMENT==="production"?i=new F.PrismaClient:(globalThis.prisma||(globalThis.prisma=new F.PrismaClient),i=globalThis.prisma);var D=(a,e)=>{let r=new Date,t=a.registeredAt,s=(r.getTime()-t.getTime())/(1e3*60*60*24*365),n=e.reduce((w,R)=>w+R.income,0);s<.3?n*=.8:s<1.5?n*=.9:s>2&&(n*=1.1);let u=3,c=e.reduce((w,R)=>w+R.income,0),m=e.reduce((w,R)=>w+R.loss,0),l=c/(m||1);l>2&&u++,l>4&&u++,l<1&&u--,l<.5&&u--;let o=e.reduce((w,R)=>w+R.taxPaid,0),d=e.reduce((w,R)=>w+R.taxPayable,0),b=o/(d||1);b>.9&&u++,b<.7&&u--;let p=Math.max(1,Math.min(5,u));return{sumAssured:n,safetyRating:p}};var ae=g(require("express"));var h=g(require("zod")),k=h.default.object({promoter_name:h.default.string(),business_name:h.default.string(),email:h.default.string().email(),password:h.default.string()}),U=h.default.object({email:h.default.string().email(),password:h.default.string()});var T=g(require("zod")),O=T.default.object({date:T.default.string(),id:T.default.string(),amount:T.default.number(),invoice:T.default.string()});var Y=async(a,e,r)=>{try{let t=a.body,s=k.safeParse(t);if(!s.success)return e.status(403).json({message:"enter required fields"});if(await i.user.findFirst({where:{email:s.data.email}}))return e.status(400).json({message:"email already exists"});if(await i.user.findFirst({where:{AND:[{business_name:s.data.business_name.toLowerCase()},{promoter_name:s.data.promoter_name.toLowerCase()}]}}))return e.status(400).json({message:"business already added"});let c=await E.password_crypt(s.data.password);await i.user.create({data:{email:s.data.email,password:c,business_name:s.data.business_name.toLowerCase(),promoter_name:s.data.promoter_name.toLowerCase()}});let m=await N.create_token(s.data.email,s.data.promoter_name,s.data.business_name);e.status(201).json({message:"business registered successfully",token:m})}catch(t){r(t)}};var W=async(a,e,r)=>{try{let t=a.body,s=U.safeParse(t);if(!s.success)return e.status(403).json({message:"enter required fields"});let n=await i.user.findFirst({where:{email:s.data.email}});if(!n)return e.status(400).json({message:"email is incorrect"});if(!await E.password_compare(s.data.password,n.password))return e.status(400).json({message:"password is incorrect"});let c=await N.create_token(s.data.email,n.promoter_name,n.business_name);e.status(201).json({message:"business Login successfully",token:c})}catch(t){r(t)}};var J=async(a,e,r)=>{try{let t=a.user.email,s=a.body;console.log(s);let n=O.safeParse(s);if(!n.success)return e.status(403).json({message:"enter required fields"});let u=await i.user.findFirst({where:{email:t},select:{id:!0,sumAssured:!0}}),c=await i.user.findFirst({where:{id:n.data.id},select:{id:!0,sumAssured:!0}});return!u||!c?e.status(200).json({message:"seller or buyer not found"}):n.data.amount>c?.sumAssured||n.data.amount>u?.sumAssured?e.status(200).json({message:"Insufficient Sum assured"}):(await i.transaction.create({data:{buyerId:u.id,sellerId:c.id,amount:n.data.amount,date:n.data.date,invoice:s.invoice,status:"PENDING"}}),e.status(200).json({message:"transaction initiated"}))}catch(t){r(t)}},V=async(a,e,r)=>{try{let t=a.user.email,s=await i.user.findFirst({where:{email:t},select:{id:!0}}),n=await i.transaction.findMany({where:{buyerId:s?.id},orderBy:{date:"desc"},take:10});if(!n||n.length===0)return e.status(200).json([]);let u=[...new Set(n.map(o=>o.sellerId))],m=(await i.user.findMany({where:{id:{in:u}},select:{id:!0,business_name:!0}})).reduce((o,d)=>(o[d.id]=d.business_name,o),{}),l=n.map(o=>{let d=m[o.sellerId],p=new Date(o.date).toLocaleString("default",{day:"2-digit",month:"long"});return{id:o.id,date:p,amount:o.amount,status:o.status,sellerName:d}});e.send(l)}catch(t){r(t)}},z=async(a,e,r)=>{try{let t=a.user.email,s=await i.user.findFirst({where:{email:t},select:{id:!0}}),n=await i.transaction.findMany({where:{sellerId:s?.id},take:10,orderBy:{date:"desc"}});if(!n||n.length===0)return e.status(200).json([]);let u=[...new Set(n.map(o=>o.buyerId))],m=(await i.user.findMany({where:{id:{in:u}},select:{id:!0,business_name:!0}})).reduce((o,d)=>(o[d.id]=d.business_name,o),{}),l=n.map(o=>{let d=m[o.buyerId],p=new Date(o.date).toLocaleString("default",{month:"long",day:"2-digit"});return{id:o.id,date:p,amount:o.amount,status:o.status,buyerName:d}});e.send(l)}catch(t){r(t)}},G=async(a,e,r)=>{try{let t=a.user.email,s=await i.user.findFirst({where:{email:t},select:{id:!0}}),n=await i.transaction.findMany({where:{sellerId:s?.id,status:"PENDING"},take:10,orderBy:{date:"desc"},select:{id:!0,amount:!0,date:!0,buyerId:!0,invoice:!0}});if(!n||n.length===0)return e.status(200).json([]);let u=[...new Set(n.map(o=>o.buyerId))],m=(await i.user.findMany({where:{id:{in:u}},select:{id:!0,business_name:!0}})).reduce((o,d)=>(o[d.id]=d.business_name,o),{}),l=n.map(o=>{let d=new Date(o.date),b=`${d.getDate().toString().padStart(2,"0")}-${(d.getMonth()+1).toString().padStart(2,"0")}`;return{id:o.id,amount:o.amount,business_name:m[o.buyerId],date:b,invoice:o.invoice||null}});e.status(200).json(l)}catch(t){r(t)}},$=async(a,e,r)=>{try{let{id:t,type:s}=a.body;console.log(s),console.log(t);let n=await i.transaction.update({where:{id:t},data:{status:s}});e.send({message:"Approved"})}catch(t){r(t)}},H=async(a,e,r)=>{let t=a.user.email,s=await i.user.findFirst({where:{email:t},select:{id:!0}});if(!s)return e.status(200).json({message:"user not found"});try{let u=(await i.transaction.findMany({where:{OR:[{buyerId:s.id,status:{in:["CLAIM_BUYER","CLAIM_SELLER"]}},{sellerId:s.id,status:{in:["CLAIM_BUYER","CLAIM_SELLER"]}}]},include:{buyer:{select:{id:!0,email:!0,business_name:!0}},seller:{select:{id:!0,email:!0,business_name:!0}}}})).map(c=>({...c,claimType:c.status==="CLAIM_BUYER"?"Buyer":"Seller",claimedBy:c.status==="CLAIM_BUYER"?c.buyer:c.seller,claimedAgainst:c.status==="CLAIM_BUYER"?c.seller:c.buyer}));e.json(u)}catch(n){r(n)}},Z=async(a,e,r)=>{let{userEmail:t}=a.params;try{let s=await i.transaction.findMany({where:{OR:[{buyer:{email:t}},{seller:{email:t}}],status:{in:["PENDING","ISSUE"]}},include:{buyer:{select:{email:!0,business_name:!0}},seller:{select:{email:!0,business_name:!0}}}});e.json(s)}catch(s){r(s)}},K=async(a,e,r)=>{let{transactionId:t,userEmail:s,claimType:n}=a.body;try{let u=await i.transaction.findUnique({where:{id:t},include:{buyer:{select:{email:!0}},seller:{select:{email:!0}}}});if(!u)return e.status(404).json({error:"Transaction not found"});let c;if(n==="seller"&&u.seller.email===s)c="CLAIM_SELLER";else if(n==="buyer"&&u.buyer.email===s)c="CLAIM_BUYER";else return e.status(400).json({error:"Invalid claim type or user"});let m=await i.transaction.update({where:{id:t},data:{status:c}});e.json(m)}catch(u){r(u)}},Q=async(a,e,r)=>{let t=a.user.email,s=await i.user.findFirst({where:{email:t},select:{id:!0}});if(!s)return e.status(400).json({error:"Invalid claim type or user"});let n=await i.user.findUnique({where:{id:s.id},select:{sumAssured:!0}});if(!n)throw new Error("User not found");let u=await i.funds.aggregate({where:{userId:s.id},_sum:{taxPaid:!0}}),c=await i.funds.findFirst({where:{userId:s.id},orderBy:{createdAt:"desc"}});console.log(c);let m=await i.transaction.count({where:{sellerId:s.id,status:"CLAIM_SELLER"}}),l=await i.transaction.count({where:{buyerId:s.id,status:"CLAIM_BUYER"}}),o=await i.transaction.aggregate({where:{buyerId:s.id,status:"COMPLETE"},_sum:{amount:!0}}),d={totalMoneyAssured:n.sumAssured,premiumPaid:u._sum.taxPaid??0,renewalDate:c?c.createdAt.toISOString().split("T")[0]:null,claimsAgainstYou:m,claimsByYou:l,totalReimbursed:o._sum.amount??0};e.send(d)};var X=g(require("axios")),ee=g(require("pdf-parse"));var se=async(a,e,r)=>{try{let t=a.user.email,s=a.body.url,n=await X.default.get(s,{responseType:"arraybuffer"}),c=(await(0,ee.default)(n.data)).text,m=ge(c);if("message"in m)return e.json(m);let l=await i.user.findFirst({where:{email:t}});if(!l)return e.status(400).json({message:"user not found"});let o=await i.funds.create({data:{name:m.name,formNumber:m.formNumber,loss:m.loss,income:m.income,taxPayable:m.taxPayable,taxPaid:m.taxPaid,userId:l.id}}),d=await i.funds.findMany({where:{userId:l.id}}),b=D(l,d);await i.user.update({where:{id:l.id},data:{sumAssured:b.sumAssured,safetyRating:b.safetyRating}}),e.json(o)}catch(t){r(t)}};function ge(a){let e={name:"",formNumber:"",businessLoss:0,totalIncome:0,totalTaxInterestFeePayable:0,taxesPaid:0,accretedIncome:0,additionalTaxInterestPayable:0,taxInterestPaid:0},r={name:"",formNumber:"",loss:NaN,income:NaN,taxPaid:NaN,taxPayable:NaN},t=a.match(/Name([A-Z\s]+)/);t&&(e.name=t[1].trim().substring(0,t[1].trim().length-2));let s=a.match(/Form Number([A-Z0-9-]+)/);s&&(e.formNumber=s[1].trim());let n=a.match(/Total Income\s*([\d,]+)/);if(n){let p=n[1].trim().replace(/,/g,"");e.formNumber==="ITR-4"?e.totalIncome=parseFloat(p)||0:e.totalIncome=parseFloat(p.substring(1))||0}let u=a.match(/Current Year business loss, if any\s*([\d,]+)/);if(u){let p=u[1].trim().replace(/,/g,"");e.businessLoss=parseFloat(p.substring(1))||0}let c=a.match(/Total tax, interest and Fee payable\s*([\d,]+)/);if(c){let p=c[1].trim().replace(/,/g,"");e.totalTaxInterestFeePayable=parseFloat(p.substring(1))||0}let m=a.match(/Taxes Paid\s*([\d,]+)/);if(m){let p=m[1].trim().replace(/,/g,"");e.taxesPaid=parseFloat(p.substring(1))||0}let l=a.match(/Accreted Income as per section 115TD\s*([\d,]+)/);if(l){let p=l[1].trim().replace(/,/g,"");e.accretedIncome=parseFloat(p.substring(2))||0}let o=a.match(/Additional Tax and interest payable\s*([\d,]+)/);if(o){let p=o[1].trim().replace(/,/g,"");e.additionalTaxInterestPayable=parseFloat(p.substring(2))||0}let d=a.match(/Tax and interest paid\s*([\d,]+)/);if(d){let p=d[1].trim().replace(/,/g,"");e.taxInterestPaid=parseFloat(p.substring(2))||0}return r.name=e.name,r.formNumber=e.formNumber,r.loss=e.businessLoss,r.income=e.totalIncome+e.accretedIncome,r.taxPaid=e.taxesPaid+e.taxInterestPaid,r.taxPayable=e.totalTaxInterestFeePayable+e.additionalTaxInterestPayable,["ITR-3","ITR-4","ITR-5","ITR-7"].includes(r.formNumber)?r:{message:"document is not valid"}}var te=async(a,e,r)=>{try{let{query:t}=a.query;if(typeof t!="string")return e.status(400).json({error:"Invalid search query"});let s=await i.user.findMany({where:{OR:[{business_name:{contains:t,mode:"insensitive"}},{promoter_name:{contains:t,mode:"insensitive"}}]},select:{id:!0,business_name:!0,promoter_name:!0,sumAssured:!0,safetyRating:!0},take:10});e.status(200).json(s)}catch{e.status(500).json({error:"Error searching users"})}};var L=ae.default.Router();L.post("/register",Y).post("/login",W);var ne=g(require("express"));var cs=require("dotenv/config"),re=g(require("jsonwebtoken"));async function x(a,e,r){let t=a.headers.authorization;if(!t)return e.status(403).json({success:!1,data:"Not Authorised"});try{let n=t.split(" ")[1],c=re.default.verify(n,y.JWT_SECRET);a.user=c}catch(s){return s instanceof Error?e.status(400).json({success:!1,data:s.message}):e.status(400).json({success:!1,data:"Something went wrong"})}r()}var S=ne.default.Router();S.post("/new",x,J).get("/buyer",x,V).get("/seller",x,z).post("/search",te).get("/pending",x,G).post("/approve",$).post("/claim",x,H).get("/transactions/:userEmail",Z).post("/makeclaim",K).get("/welcome",x,Q);var oe=g(require("express"));var v=oe.default.Router();v.post("/add",x,se);var I=(0,q.default)();I.use((0,ie.default)());I.use(q.default.json());I.get("/",(a,e)=>{e.json({message:"Welcome to the TrustTrade"})});I.use("/auth",L);I.use("/transact",S);I.use("/funds",v);I.use(B);y.verifyConfig();I.listen(y.PORT,()=>{console.log(`Server running on port ${y.PORT}`)});
//# sourceMappingURL=index.js.map
